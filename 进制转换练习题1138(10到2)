/*题目描述：
将一个长度最多为30位数字的十进制非负整数转换为二进制数输出。

输入：
多组数据，每行为一个长度不超过30位的十进制非负整数。 
（注意是10进制数字的个数可能有30个，而非30bits的整数）

输出：
每行输出对应的二进制数。

样例输入：
0
1
3
8
样例输出：
0
1
11
1000*/
#include<stdio.h>//从字符数组 到数 再到字符数组 再依从输出 
#include<string.h>
int main()
{
	char ans[10000],a[10000];//int ans；直接输入数也行 下面就省去了由字符数组到数字的转换
	while(scanf("%s",ans)!=EOF)
	{
		int len=strlen(ans);
		int j,i=0,x;
		int reverse=0;
		for(j=0;j<len;j++)
		{
			reverse=reverse*10+(ans[j]-'0');
		}
		do
		{
			x=reverse%2;/八进制只是把2换成8
			a[i++]=x+'0';
			reverse=reverse/2;
		}while(reverse);
		int k;
		for(k=i-1;k>=0;k--)
		{
		printf("%c",a[k]);// 盲点  一次打一个字符	如果改为s 不会输出东西 
		}
		
		
	}
	return 0;
	
 }

